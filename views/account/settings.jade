extends ../layout

block content
  .page-header
    h3 Profile Information

  form.form-horizontal(action='/account/profile', method='POST')
    input( name='_csrf', value=_csrf)
    .form-group
      label.col-sm-3.control-label(for='email') Email
      .col-sm-7
        input.form-control(type='email', name='email', id='email', value='#{user.email}')
    .form-group
      label.col-sm-3.control-label(for='name') Name
      .col-sm-7
        input.form-control(type='text', name='name', id='name', value='#{user.profile.appearname}')
    .form-group
      label.col-sm-3.control-label(for='type') Type of provider
      .col-sm-6
        label.radio.col-sm-3
          input(type='radio', checked=user.profile.type=='grounds', name='type', value='grounds', data-toggle='radio')
          span Grounds
        label.radio.col-sm-3
          input(type='radio', checked=user.profile.type=='upstairs', name='type', value='upstairs', data-toggle='radio')
          span Upstairs
        label.radio.col-sm-3
          input(type='radio', checked=user.profile.type=='individual', name='individual', value='individual', data-toggle='radio')
          span Individual
    .form-group
      label.col-sm-3.control-label(for='location') District
      .col-sm-7
        input.form-control(type='text', name='location', id='location', value='#{user.profile.location}')
    .form-group
      label.col-sm-3.control-label(for='bio') Short Bio
      .col-sm-7
        input.form-control(type='text', name='bio', id='bio', value='#{user.profile.bio}')
    .form-group
      label.col-sm-3.control-label(for='categories') Categories
      .col-sm-7
        input.form-control(type='text', name='categories', id='categories', value='#{user.profile.categories}')
    .form-group
        .col-sm-offset-3.col-sm-4
          button.btn.btn.btn-primary(type='submit')
            i.fa.fa-pencil
            | Update Profile
  .page-header
    h3 Upload Profile Photo
  form.form-horizontal(action='/account/profileimage', method='POST', enctype='multipart/form-data')
    .form-group
      label.col-sm-3.control-label(for='profileimage') Profile Photo
      .col-sm-4
        img( src="../noavatar.jpg", name = 'profileimage', class='profileimage' id= "myImg", width='200', height='200')
        input(type='file', name='avatar')
        button.btn.btn.btn-primary(type='submit')
          | Upload Profile Image

  .page-header
    h3 Set location
    input#pac-input.controls(type='text', placeholder='Enter a location')
    #type-selector.controls
    #map #{user.profile.district}
    button.btn.btn.btn-primary.updateLocation(type='submit')
        | Edit Your Location

  .page-header
    h3 Change Password

  form.form-horizontal(action='/account/password', method='POST')
    input(type='hidden', name='_csrf', value=_csrf)
    .form-group
      label.col-sm-3.control-label(for='password') New Password
      .col-sm-7
        input.form-control(type='password', name='password', id='password')
    .form-group
      label.col-sm-3.control-label(for='confirmPassword') Confirm Password
      .col-sm-7
        input.form-control(type='password', name='confirmPassword', id='confirmPassword')
    .form-group
      .col-sm-offset-3.col-sm-4
        button.btn.btn-primary(type='submit')
          i.fa.fa-lock
          | Change Password

  .page-header
    h3 Delete Account

  form.form-horizontal(action='/account/delete', method='POST')
    .form-group
      p.col-sm-offset-3.col-sm-4 You can delete your account, but keep in mind this action is irreversible.
      input(type='hidden', name='_csrf', value=_csrf)
      .col-sm-offset-3.col-sm-4
        button.btn.btn-danger(type='submit')
          i.fa.fa-trash
          | Delete my account

  .page-header
    h3 Linked Accounts
  .form-horizontal
    .form-group
      .col-sm-offset-3.col-sm-4
        if user.instagram
          p: a.text-danger(href='/account/unlink/instagram') Unlink your Instagram account
        else
          p: a(href='/auth/instagram') Link your Instagram account
      .col-sm-offset-3.col-sm-4
        if user.google
          p: a.text-danger(href='/account/unlink/google') Unlink your Google account
        else
          p: a(href='/auth/google') Link your Google account
      .col-sm-offset-3.col-sm-4
        if user.facebook
          p: a.text-danger(href='/account/unlink/facebook') Unlink your Facebook account
        else
          p: a(href='/auth/facebook') Link your Facebook account
      .col-sm-offset-3.col-sm-4
        if user.twitter
          p: a.text-danger(href='/account/unlink/twitter') Unlink your Twitter account
        else
          p: a(href='/auth/twitter') Link your Twitter account
      .col-sm-offset-3.col-sm-4
        if user.github
          p: a.text-danger(href='/account/unlink/github') Unlink your GitHub account
        else
          p: a(href='/auth/github') Link your GitHub account
      .col-sm-offset-3.col-sm-4
        if user.linkedin
          p: a.text-danger(href='/account/unlink/linkedin') Unlink your LinkedIn account
        else
          p: a(href='/auth/linkedin') Link your LinkedIn account

  script.
    console.log("hello");
    var lat = 0;
    var long = 0;
    var district = ""
    var csrfToken = $("meta[name='csrf-token']").attr("content");


    $(function () {
    console.log(csrfToken);

    console.log("hello");

      $(":file").change(function () {

          if (this.files && this.files[0]) {
            var reader = new FileReader();
             reader.onload = imageIsLoaded;
            reader.readAsDataURL(this.files[0]);
          }
      });
    });

    function imageIsLoaded(e) {
      $('#myImg').attr('src', e.target.result);
    };


    $('#profileimage').click(function(e){
      console.log('change profileimage');
      e.preventDefault();
    });


    $('.updateLocation').click(function(e){
      console.log('change location');
      e.preventDefault();
      console.log(lat + "," + long)
        console.log("district" + district)
       $.post( '/account/location', {'lat': lat, 'long': long,'district': district, '_csrf' : $("meta[name='csrf-token']").attr("content")}, function( data){
          console.log("updated.")


      }, "json");

    });

    //load and find photo




    function initMap() {
      var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: -33.8688, lng: 151.2195},
      zoom: 13
      });
      var input = /** @type {!HTMLInputElement} */(
      document.getElementById('pac-input'));
      var types = document.getElementById('type-selector');
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
      map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);
      var autocomplete = new google.maps.places.Autocomplete(input);
      autocomplete.bindTo('bounds', map);
      var infowindow = new google.maps.InfoWindow();
      var marker = new google.maps.Marker({
      map: map,
      anchorPoint: new google.maps.Point(0, -29)
      });
      autocomplete.addListener('place_changed', function() {
      infowindow.close();
      marker.setVisible(false);
      var place = autocomplete.getPlace();
      if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
      }
      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
      } else {
      map.setCenter(place.geometry.location);
       lat = place.geometry.location.lat();
       long = place.geometry.location.lng();

      console.log(lat + "," + long)
        ////////////////////////////getttt api ////////////////////////////////////////
        $.getJSON("http://maps.googleapis.com/maps/api/geocode/json?latlng="+lat+","+ long +"&sensor=true",
     function(data){
       console.log(data);
       console.log(data.results[0].address_components[2].long_name)
       console.log(data.results[0].address_components[3].long_name)

        if (data.results[0].address_components[2].long_name === "New Territories") {
          console.log("its new Territories")
          district = "newterr"
          }else if (data.results[0].address_components[2].long_name === "Kowloon") {
          console.log("its kowlooon")
          district = "kow"
          }else if (data.results[0].address_components[3].long_name === "Kowloon"){
            console.log("its kowlooon")
          district = "kow"
          }else if (data.results[0].address_components[3].long_name === "New Territories") {
          console.log("its newterr")
          district = "newterr"
          } else {

          console.log("its hk island")

          district = "hkis"
          }

     })
        /////////////////////////////////////////////////////////////////////////////////////////
      map.setZoom(17);  // Why 17? Because it looks good.
      }
      marker.setIcon(/** @type {google.maps.Icon} */({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
      }));
      marker.setPosition(place.geometry.location);
      marker.setVisible(true);
      var address = '';
      if (place.address_components) {
      address = [
      (place.address_components[0] && place.address_components[0].short_name || ''),
      (place.address_components[1] && place.address_components[1].short_name || ''),
      (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
      }
      infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);

      infowindow.open(map, marker);
      });
      // Sets a listener on a radio button to change the filter type on Places
      // Autocomplete.
      function setupClickListener(id, types) {
      var radioButton = document.getElementById(id);
      //- radioButton.addEventListener('click', function() {
      //- autocomplete.setTypes(types);
      //- });
      }
      setupClickListener('changetype-all', []);
      setupClickListener('changetype-address', ['address']);
      setupClickListener('changetype-establishment', ['establishment']);
      setupClickListener('changetype-geocode', ['geocode']);
      }
  script(src='https://maps.googleapis.com/maps/api/js?key=AIzaSyB1_QSC1MHBWdON8G3NICbfuaMXpM1RsNM&libraries=places&callback=initMap', async='', defer='')



